name: Code Modularity Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  modularity-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check file modularity
      run: |
        echo "🔍 Checking file modularity..."
        npm run check-modularity
        
    - name: Run ESLint with file size rules
      run: |
        echo "🔍 Running ESLint with modularity rules..."
        npm run lint
        
    - name: TypeScript compilation check
      run: |
        echo "🔍 Checking TypeScript compilation..."
        npx tsc --noEmit
        
    - name: Generate modularity report
      run: |
        echo "📊 Generating detailed modularity report..."
        npm run check-modularity > modularity-report.txt || true
        cat modularity-report.txt
        
    - name: Upload modularity report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: modularity-report
        path: modularity-report.txt
        
    - name: Comment on PR (if modularity issues found)
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          try {
            const report = fs.readFileSync('modularity-report.txt', 'utf8');
            
            const comment = `## 🚨 Code Modularity Issues Found
            
            The automated modularity check found files that exceed the 400-line limit or require refactoring:
            
            \`\`\`
            ${report}
            \`\`\`
            
            ### Next Steps:
            1. Review files marked as "CRITICAL" - these need immediate refactoring
            2. Consider splitting large files into smaller, focused modules
            3. Refer to \`.github/copilot-modularity-rules.md\` for guidance
            4. Run \`npm run check-modularity\` locally to verify fixes
            
            ### Refactoring Guidelines:
            - **Target**: Keep files under 200-300 lines
            - **Maximum**: No file should exceed 400 lines
            - **Strategy**: Split by responsibility (API, transformation, validation)
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('No modularity report found or error reading it:', error.message);
          }

  build-and-test:
    runs-on: ubuntu-latest
    needs: modularity-check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Run tests
      run: npm test
      
    - name: Generate coverage report
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
